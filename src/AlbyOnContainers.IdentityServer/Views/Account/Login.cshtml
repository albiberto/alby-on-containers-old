@using IdentityServer.ViewModels.Shared
@model IdentityServer.ViewModels.Account.LoginViewModel

@{
    ViewData["Title"] = TitleViewModel.Login.Title;
}

<div class="login-page">
    <partial name="_Title" model="TitleViewModel.Login" />
    <partial name="_ValidationSummary"/>

    <div class="row">

        @if (Model?.EnableLocalLogin ?? false)
        {
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">
                        <h2 class="lead">Local Account</h2>
                    </div>

                    <div class="card-body">
                        <form method="post">

                            <div class="form-group">
                                <label asp-for="Email"></label>
                                <input class="form-control" placeholder="Email" asp-for="Email" autofocus>
                            </div>
                            <div class="form-group">
                                <label asp-for="Password"></label>
                                <input type="password" class="form-control" placeholder="Password" asp-for="Password" autocomplete="off">
                            </div>
                            @if (Model.AllowRememberLogin)
                            {
                                <div class="form-group">
                                    <div class="form-check">
                                        <input class="form-check-input" asp-for="RememberLogin">
                                        <label class="form-check-label" asp-for="RememberLogin">
                                            Remember My Login
                                        </label>
                                    </div>
                                </div>
                            }
                            <button asp-action="Login" asp-route-ReturnUrl="@ViewData["ReturnUrl"]" class="btn btn-outline-primary w-25" type="submit">Login</button>
                            <button asp-action="Cancel" asp-route-ReturnUrl="@ViewData["ReturnUrl"]" class="btn btn-outline-secondary w-25" type="submit">Cancel</button>
                        </form>
                        
                        <div class=" lead text-right mt-4">
                            <div>
                                <a asp-controller="Register" asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]">Non sei ancora registrato?</a>
                            </div>
                            <div>
                                <a  asp-controller="Passwords" asp-action="ForgotPassword" asp-route-returnurl="@ViewData["ReturnUrl"]">Password dimenticata?</a>
                            </div>
                            <div>
                                <a  asp-controller="Register" asp-action="ResendEmail" asp-route-returnurl="@ViewData["ReturnUrl"]">Non ti &egrave; arrivata la mail di conferma?</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (Model?.VisibleExternalProviders.Any() ?? false)
        {
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">
                        <h2 class="lead">External Account</h2>
                    </div>
                    <div class="card-body">
                        <ul class="list-inline">
                            @foreach (var provider in Model.VisibleExternalProviders)
                            {
                                <li class="list-inline-item">
                                    <a class="btn btn-secondary"
                                       asp-controller="External"
                                       asp-action="Challenge"
                                       asp-route-scheme="@provider.AuthenticationScheme"
                                       asp-route-returnUrl="@ViewData["ReturnUrl"]">
                                        @provider.DisplayName
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        }

        @if (!(Model?.EnableLocalLogin ?? false) && !(Model?.VisibleExternalProviders.Any() ?? false))
        {
            <div class="alert alert-warning">
                <strong>Invalid login request</strong>
                There are no login schemes configured for this request.
            </div>
        }
    </div>
</div>